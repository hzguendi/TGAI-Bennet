# TGAI-Bennet Configuration File
# All configurable parameters are defined here

app:
  name: "TGAI-Bennet"
  version: "1.0.0"
  debug: true
  timezone: "Europe/Paris"

llm:
  default_provider: "openrouter"  # Options: openai, openrouter, deepseek, ollama
  default_model: "deepseek/deepseek-r1:free"      # Default model to use
  temperature: 0.7            # LLM temperature setting (0-1)
  max_tokens: 2000           # Maximum tokens per response
  
  providers:
    openai:
      base_url: "https://api.openai.com/v1"
      models:
        - "gpt-3.5-turbo"
        - "gpt-4"
        - "gpt-4-turbo-preview"
    
    openrouter:
      base_url: "https://openrouter.ai/api/v1"
      models:
        - "deepseek/deepseek-r1:free"
        - "openai/gpt-3.5-turbo"
        - "anthropic/claude-2"
        - "google/palm-2-chat-bison"
    
    deepseek:
      base_url: "https://api.deepseek.com/v1"
      models:
        - "deepseek-chat"
        - "deepseek-coder"
    
    ollama:
      base_url: "http://localhost:11434"
      models:
        - "llama2"
        - "mistral"
        - "codellama"

telegram:
  parse_mode: "Markdown"      # Options: Markdown, HTML, None
  disable_web_page_preview: true
  disable_notification: false
  reply_timeout: 30          # Seconds to wait for bot replies
  max_message_length: 4096   # Maximum message length to send
  
  commands:
    # Admin commands
    reload_modules: "/reload_modules"
    reload_config: "/reload_config" 
    status: "/status"
    stop_bot: "/stop"
    health_check: "/health"

modules:
  enabled: true
  directory: "src/modules"
  hot_reload: true          # Auto-detect and reload modules
  scan_interval: 60         # Seconds between module directory scans
  
  state_storage:
    enabled: true
    type: "json"            # Options: json, sqlite, redis
    path: "data/module_states.json"
  
  error_handling:
    max_retries: 3
    retry_delay: 5          # Seconds between retries
    notify_on_error: true   # Send Telegram message on module errors

  SnarkyMotivatorModule:
    enabled: true
    interval_minutes: 600

logging:
  level: "DEBUG"             # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
  format: "%(asctime)s [%(levelname)s] %(name)s: %(message)s"
  
  file:
    enabled: true
    path: "logs/tgai-bennet.log"
    rotation: "1 day"       # Options: X day(s), X hour(s), X MB
    retention: "30 days"    # How long to keep old logs
    
  module_logging:
    enabled: true
    separate_files: true    # One log file per module
    path_template: "logs/modules/{module_name}.log"

health:
  enabled: true
  interval: 300             # Seconds between health checks
  
  metrics:
    memory_threshold: 500   # MB, alert if exceeded
    cpu_threshold: 80       # %, alert if exceeded
    disk_threshold: 90      # %, alert if exceeded
  
  notifications:
    telegram_errors: true   # Send errors to Telegram
    log_errors: true        # Log health errors
    
  restarts:
    auto_restart_on_failure: true
    max_restart_attempts: 3
    restart_delay: 30       # Seconds between restart attempts

module_defaults:
  time_trigger:
    type: "interval"        # Options: interval, cron
    interval: 300           # Default interval in seconds
    
  event_trigger:
    type: "webhook"         # Options: webhook, file_change, socket
    retry_on_failure: true
    
  api_settings:
    timeout: 30            # API call timeout in seconds
    max_retries: 3
    backoff_factor: 1.5    # Multiplier for exponential backoff
